{"version":3,"sources":["components/tabs/tabs.tsx","components/tabs/tab.tsx","components/settings-panel/settings-panel.tsx","components/date-display/date-display.tsx","components/number-display/number-display.tsx","services/file-service.ts","model/unit.ts","utils/save-file.ts","components/modal/modal.tsx","components/history-panel/history-panel.tsx","model/drink.ts","services/install-service.ts","components/time-display/time-display.tsx","components/last-drink-display/last-drink-display.tsx","components/session-panel/active-session-panel/active-session-panel.tsx","model/active-session.ts","model/history.ts","components/session-panel/no-session-panel/no-session-panel.tsx","model/historical-session.ts","components/modal-true-false-selection/modal-true-false-selection.tsx","components/about-panel/about-panel.tsx","components/disclaimer/disclaimer.tsx","components/how-to-panel/how-to-panel.tsx","components/main-panel/main-panel.tsx","services/settings-service.ts","services/session-service.ts","services/history-service.ts","services/local-storage-service.ts","services/main-state-service.ts","services/initializer.ts","App.tsx","serviceWorker.js","index.js"],"names":["Tabs","tab","this","props","activeTabChanged","label","activeTab","activeTabLabel","children","find","tabEl","className","map","key","onClick","_setActiveTab","React","Tab","SettingsPanel","type","value","sessionMax","size","maxLength","min","max","step","name","onChange","e","onChangeSessionMax","target","weeklyMax","onChangeWeeklyMax","units","onChangeUnits","hours","onChangeHours","historySessionsToKeep","onChangeHistorySessions","onSaveSettings","disabled","changesExist","areInputsValid","onCancelChanges","onRestoreDefaults","DateDisplay","datetime","display","format","toLocaleUpperCase","replace","getFullYear","toString","substring","month","getMonth","day","getDate","NumberDisplay","number","decimalPlaces","multiplier","Math","pow","round","VolumeUnit","Header","FileService","sessions","data","filename","file","Blob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","window","revokeObjectURL","saveFile","historyToData","session","date","unitsConsumed","rollingWeekly","join","lines","trim","split","length","Error","splice","line","tokens","parseFloat","isNaN","Date","text","then","dataToHistory","Modal","show","_showHideClassName","title","handleClose","buttonText","HistoryPanel","state","showImportFailedModal","showImportSuccessModal","importHistory","_showImportSuccessModal","catch","err","console","error","_showImportFailedModal","exportHistory","setState","idx","deleteHistory","_exportHistory","bind","htmlFor","id","accept","event","_importHistory","files","_hideImportFailedModal","_hideImportSuccessModal","InstallResult","DisplayMode","Drink","volume","volumeUnit","abv","time","_volume","_volumeUnit","_abv","_time","Ounces","TimeDisplay","twentyFourHourDisplay","baseHours","getHours","displayHours","baseMinutes","getMinutes","displayMinutes","amPm","LastDrinkDisplay","drink","deleteDrink","alcoholUnits","ActiveSessionPanel","currentVolume","lastVolume","currentAbv","lastAbv","currentVolumeUnit","lastVolumeUnit","unit","_formIsValid","addDrink","_isvolumeValid","_isAbvValid","cancelSession","sessionTotal","rollingWeeklyTotal","rollingWeeklyMax","hourlyRate","hourlyRateMax","_handleChangeVolume","_handleChangeUnit","Milliliters","_handleChangeAbv","_isOverSessionMax","_isOverRate","_isOverWeeklyMax","_addDrink","lastDrink","deleteLastDrink","nextDrinkTime","sessionRemaining","rollingWeeklyRemaining","finishSession","_cancelSession","ActiveSession","targetHourlyRate","_drinks","_sessionMax","_date","_targetHourlyRate","push","reduce","prevValue","remaining","startTime","timeDiff","valueOf","History","_sessions","NoSessionPanel","onBeginNewSession","HistoricalSession","_unitsConsumed","_weeklyMax","_rollingWeekly","TrueFalseSelectionModal","rejectText","acceptText","AboutPanel","rel","Disclaimer","accepted","scroll","top","left","behavior","_setAccepted","checked","_submit","HowToPanel","viewedHowToPanel","InstallService","_deferredPrompt","_installCallbacks","_installAvailableCallbacks","_displayModeCallbacks","_installResult","REJECTED","_isInstallable","_displayMode","BROWSERTAB","_displayModeIsSet","addEventListener","preventDefault","_onInstallAvailable","navigator","hasOwnProperty","STANDALONEIOS","matchMedia","matches","STANDALONE","_onDisplayModeSet","callback","prompt","userChoice","choiceResult","outcome","ACCEPTED","_onInstall","MainPanel","_settingsService","_sessionService","_historyService","_mainStateService","_installService","_activeSession","_history","_lastTimeoutCheckTime","settingsService","sessionService","historyService","mainStateService","installService","_loadSession","_loadHistory","_setCheckForTimeout","viewedHowToTab","sessionState","_getUpdatedSessionState","history","showCancelSessionWarning","showDeleteHistoryWarning","settingsState","_getSettingsStateFromService","showDisclaimer","acceptedDisclaimer","showTimeoutPrompt","_passedTimeout","showInstallButton","displayMode","installable","addDisplayModeSetListener","result","prevState","addInstallAvailableListener","promptToInstall","setInterval","_checkTimeForTimeout","MINUTE","loadHistory","loadSession","saveHistory","_getUpdatedHistorySate","newSettingsState","saveSession","_getRollingWeeklyTotal","consumptionRate","_getRollingWeeklyRemaining","pastWeek","getTime","histSession","addSession","_refreshHistory","deleteSession","_hasValue","_areSettingsValid","_validateStateSettings","_refreshSettings","restoreDefaults","sessionsToKeep","parseInt","updateSettings","sort","b","deleteLast","newSessionState","_finishSession","_acceptDisclaimer","_promptForInstall","alt","src","_changeTab","_warnCancelSession","_handleDeleteLastDrink","_finishCancelSession","_handleSessionTimeout","_beginNewSession","_handleChangeSettingSessionMax","_handleChangeSettingWeeklyMax","_handleChangeSettingUnits","_handleChangeSettingHours","_handleChangeSettingHistorySessions","_handleCancelSettingsChanges","_handleRestoreDefaultSettings","_handleSaveSettings","_warnDeleteHistory","_finishDeleteHistory","version","SettingsService","storageService","_storageService","_alcoholUnits","_hours","_historySessionsToKeep","getNumber","updates","put","SessionService","localStorageService","_localStorageService","savedModel","getObject","activeSession","drinks","forEach","saveModel","putObject","remove","HistoryService","_sessionsToKeep","historicSessions","start","slice","LocalStorageService","namespace","_namespace","val","LZString","compressToUTF16","decompressFromUTF16","_unzip","localStorage","getItem","_key","toLocaleLowerCase","setItem","_zip","valueString","JSON","parse","stringify","removeItem","MainStateService","getBoolean","Initializer","App","initializer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e4864171.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Tab } from './tab';\r\n\r\nexport interface ITabsProps {\r\n  activeTabLabel?: string;\r\n  children: React.ReactComponentElement<typeof Tab>[];\r\n  activeTabChanged?(label: string, tab?: React.ReactComponentElement<typeof Tab>): void;\r\n}\r\n\r\nclass Tabs extends React.Component<ITabsProps, any> {\r\n\r\n  private _setActiveTab(tab: React.ReactComponentElement<typeof Tab>) {\r\n    if (this.props.activeTabChanged) {\r\n      this.props.activeTabChanged(tab.props.label, tab);\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const activeTab = this.props.activeTabLabel \r\n      ? (this.props.children.find(tabEl => tabEl.props.label === this.props.activeTabLabel) ?? this.props.children[0])\r\n      : this.props.children[0];\r\n    return <div className=\"tab-container\">\r\n      <div className=\"tab-headers\">\r\n        {this.props.children.map(tab => \r\n          <div key={\"tab-header-\" + tab.props.label} className={\"tab-header \" + (tab === activeTab ? \"active-tab-header\" : \"\")}\r\n            onClick={() => this._setActiveTab(tab)}\r\n          >\r\n            {tab.props.label}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {activeTab}\r\n    </div>\r\n  }\r\n}\r\n\r\nexport { Tabs };","import * as React from 'react';\r\n\r\nexport interface ITabProps {\r\n  label: string;\r\n}\r\n\r\nexport class Tab extends React.Component<ITabProps, any> {\r\n  public render() {\r\n    return <div className=\"tab-content\">{this.props.children}</div>\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport './settings-panel.scss';\r\n\r\ninterface ISettingsPanelProps {\r\n  sessionMax: string;\r\n  weeklyMax: string;\r\n  units: string;\r\n  hours: string;\r\n  historySessionsToKeep: string;\r\n  areInputsValid: boolean;\r\n  changesExist: boolean;\r\n  onChangeSessionMax(sessionMax: string): void;\r\n  onChangeWeeklyMax(weeklyMax: string): void;\r\n  onChangeUnits(units: string): void;\r\n  onChangeHours(hours: string): void;\r\n  onChangeHistorySessions(historySessionsToKeep: string): void;\r\n  onCancelChanges(): void;\r\n  onRestoreDefaults(): void;\r\n  onSaveSettings(): void;\r\n}\r\n\r\nclass SettingsPanel extends React.Component<ISettingsPanelProps, any> {\r\n\r\n  render() {\r\n    return <div className=\"settings-container\">\r\n      <h3>Settings</h3>\r\n      <div className=\"settings-input max-per-session\">\r\n        <div className=\"settings-label\">Max Alcohol Units Per Session</div>\r\n        <input \r\n          type=\"number\" \r\n          value={this.props.sessionMax} \r\n          size={5} \r\n          maxLength={5} \r\n          min={0.1}\r\n          max={12}\r\n          step={1}\r\n          name=\"maxPerSessionInput\"\r\n          onChange={e => this.props.onChangeSessionMax(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      <div className=\"settings-input max-per-week\">\r\n        <div className=\"settings-label\">Max Alcohol Units Per Week</div>\r\n        <input \r\n          type=\"number\" \r\n          value={this.props.weeklyMax} \r\n          size={5} \r\n          maxLength={5}\r\n          min={0.1}\r\n          max={49}\r\n          step={1}\r\n          name=\"maxPerWeekInput\"\r\n          onChange={e => this.props.onChangeWeeklyMax(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      <strong>Consumption Rate</strong>\r\n      <div className=\"settings-input session-rate-units\">\r\n        <div className=\"settings-label\">Units...</div>\r\n        <input \r\n          type=\"number\" \r\n          value={this.props.units} \r\n          size={5} \r\n          maxLength={5} \r\n          min={0.1}\r\n          max={12}\r\n          step={1}\r\n          name=\"units\"\r\n          onChange={e => this.props.onChangeUnits(e.target.value)}\r\n        ></input>\r\n        </div>\r\n      <div className=\"settings-input session-rate-hour\">\r\n        <div className=\"settings-label\">...Per Hours</div>\r\n        <input \r\n          type=\"number\" \r\n          value={this.props.hours} \r\n          size={5} \r\n          maxLength={5}\r\n          min={0.1}\r\n          max={12} \r\n          step={1}\r\n          name=\"hours\"\r\n          onChange={e => this.props.onChangeHours(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      <strong>History</strong>\r\n      <div className=\"settings-input keep-history-sessions\">\r\n        <div className=\"settings-label\">History Sessions to Keep</div>\r\n        <input \r\n          type=\"number\" \r\n          value={this.props.historySessionsToKeep} \r\n          size={3} \r\n          maxLength={3}\r\n          min={0}\r\n          step={1}\r\n          max={366} \r\n          name=\"historySessions\"\r\n          onChange={e => this.props.onChangeHistorySessions(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      <div className=\"settings-buttons\">\r\n        <button className=\"btn\" onClick={this.props.onSaveSettings} disabled={!this.props.changesExist || !this.props.areInputsValid}>Save</button>\r\n        <button className=\"btn\" onClick={this.props.onCancelChanges} disabled={!this.props.changesExist}>Cancel Changes</button>\r\n        <button className=\"btn btn-danger\" onClick={this.props.onRestoreDefaults}>Restore Defaults</button>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport { SettingsPanel };\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nexport interface IDateDisplay {\r\n  datetime: Date;\r\n  format: string;\r\n}\r\n\r\nexport const DateDisplay: FunctionComponent<IDateDisplay> = ({datetime, format}) => {\r\n  let display = format.toLocaleUpperCase();\r\n  display = display.replace('YYYY', datetime.getFullYear().toString());\r\n  display = display.replace('YY', datetime.getFullYear().toString().substring(2,4));\r\n  const month = datetime.getMonth() + 1;\r\n  display = display.replace('MM', month < 10 ? '0' + month : month.toString());\r\n  const day = datetime.getDate();\r\n  display = display.replace('DD', day < 10 ? '0' + day : day.toString());\r\n  return <span>{display}</span>;\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nexport interface INumberDisplayProps {\r\n  number: number;\r\n  decimalPlaces: number;\r\n}\r\n\r\nexport const NumberDisplay: FunctionComponent<INumberDisplayProps> = ({number, decimalPlaces}) => {\r\n  const multiplier = Math.pow(10, decimalPlaces);\r\n  const display = Math.round(number * multiplier) / multiplier;\r\n  return <span>{display}</span>;\r\n}\r\n","import { saveFile } from '../utils/save-file';\r\nimport { IHistorySessionDto } from '../model/history-session-dto';\r\n\r\nconst ErrMessage = 'Import csv was not valid.';\r\nconst VersionHeader = 'v1.0';\r\nconst Header = 'Date,Units,Session Max,Rolling Weekly,Weekly Max';\r\n\r\nexport class FileService {\r\n  public static exportHistory(sessions: IHistorySessionDto[]): void {\r\n    const data = this.historyToData(sessions);\r\n    saveFile(data, 'less-tipsy-history.csv', 'text/csv');\r\n  }\r\n\r\n  private static historyToData(sessions: IHistorySessionDto[]): string {\r\n    const data = `${VersionHeader}\\n${Header}\\n`;\r\n    return data + sessions.map(session => \r\n      `${session.date},${session.unitsConsumed},${session.sessionMax},${session.rollingWeekly},${session.weeklyMax}`).join('\\n');\r\n  }\r\n\r\n  private static dataToHistory(data: string): IHistorySessionDto[] {\r\n    const lines = data.trim().split('\\n');\r\n    // discard headers\r\n    if (lines.length < 2 || lines[0] !== VersionHeader || lines[1] !== Header) {\r\n      throw new Error('Invalid csv format.');\r\n    }\r\n\r\n    lines.splice(0, 2);\r\n    const historySessions: IHistorySessionDto[] = lines.map(line => {\r\n      const tokens = line.trim().split(',');\r\n      if (tokens.length === 0) {\r\n        throw new Error(ErrMessage);\r\n      }\r\n      const unitsConsumed = parseFloat(tokens[1]);\r\n      const sessionMax = parseFloat(tokens[2]);\r\n      const rollingWeekly = parseFloat(tokens[3]);\r\n      const weeklyMax = parseFloat(tokens[4]);\r\n\r\n      if (isNaN(unitsConsumed) \r\n        || isNaN(sessionMax)\r\n        || isNaN(rollingWeekly)\r\n        || isNaN(weeklyMax)\r\n      ) {\r\n        throw new Error(ErrMessage);\r\n      }\r\n\r\n      return {\r\n        date: new Date(tokens[0]),\r\n        unitsConsumed,\r\n        sessionMax,\r\n        rollingWeekly,\r\n        weeklyMax,\r\n      };\r\n    });\r\n    return historySessions;\r\n  }\r\n\r\n  public static importHistory(file: File): Promise<IHistorySessionDto[]|void> {\r\n    return file.text().then((text: string) => {\r\n        return this.dataToHistory(text);\r\n      });\r\n  }\r\n}\r\n","export enum VolumeUnit {\r\n  Ounces = \"Ounces\",\r\n  Milliliters = \"Milliliter\"\r\n}","export function saveFile(data: any, filename: string, type: string) {\r\n  var file = new Blob([data], {type: type});\r\n  const a = document.createElement(\"a\"),\r\n          url = URL.createObjectURL(file);\r\n  a.href = url;\r\n  a.download = filename;\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  setTimeout(function() {\r\n      document.body.removeChild(a);\r\n      window.URL.revokeObjectURL(url);  \r\n  }, 0); \r\n}\r\n","import * as React from 'react';\r\nimport './modal.scss';\r\n\r\nexport interface IModalProps {\r\n  handleClose(): void;\r\n  show?: boolean;\r\n  buttonText: string;\r\n  title:string;\r\n}\r\n\r\nexport class Modal extends React.Component<IModalProps, any> {\r\n  private _showHideClassName(): string {\r\n    return this.props.show ? 'modal modal-display-block' : 'modal modal-display-none';\r\n  }\r\n\r\n  public render() {\r\n    return <div className={this._showHideClassName()}>\r\n        <div className=\"modal-main\">\r\n          <div className=\"modal-title\">{this.props.title}</div>\r\n          <div className=\"modal-content\">{this.props.children}</div>\r\n          <div className=\"modal-buttons\">\r\n            <button className=\"modal-button\" onClick={() => this.props.handleClose()}>{this.props.buttonText}</button>\r\n          </div>\r\n        </div>\r\n      </div>;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { DateDisplay } from '../date-display/date-display';\r\nimport { NumberDisplay } from '../number-display/number-display';\r\nimport { FileService } from '../../services/file-service';\r\nimport './history-panel.scss';\r\nimport { IHistorySessionDto } from '../../model/history-session-dto';\r\nimport { Modal } from '../modal/modal';\r\n\r\nexport interface IHistoryPanelSession {\r\n  unitsConsumed: number;\r\n  sessionMax: number;\r\n  weeklyMax: number;\r\n  rollingWeekly: number;\r\n  date: Date;\r\n}\r\n\r\nexport interface IHistoryPanelProps {\r\n  deleteHistory(): void;\r\n  importHistory(importSession: IHistorySessionDto[]): void;\r\n  sessions: IHistoryPanelSession[];\r\n}\r\n\r\ninterface IHistoryPanelState {\r\n  showImportFailedModal: boolean;\r\n  showImportSuccessModal: boolean;\r\n}\r\n\r\nclass HistoryPanel extends React.Component<IHistoryPanelProps, IHistoryPanelState> {\r\n  public constructor(props: IHistoryPanelProps) {\r\n    super(props);\r\n    this.state = {\r\n      showImportFailedModal: false,\r\n      showImportSuccessModal: false\r\n    };\r\n  }\r\n\r\n  private _importHistory(file: File) {\r\n    FileService.importHistory(file).then(sessions => {\r\n      if (!sessions) return;\r\n      this._showImportSuccessModal();\r\n      this.props.importHistory(sessions);\r\n    }).catch(err => {\r\n      console.error(err);\r\n      this._showImportFailedModal();\r\n    });\r\n  }\r\n\r\n  private _exportHistory() {\r\n    FileService.exportHistory(this.props.sessions.map<IHistorySessionDto>(session => ({\r\n      date: session.date,\r\n      sessionMax: session.sessionMax,\r\n      weeklyMax: session.weeklyMax,\r\n      rollingWeekly: session.rollingWeekly,\r\n      unitsConsumed: session.unitsConsumed\r\n    })));\r\n  }\r\n\r\n  private _showImportFailedModal() {\r\n    this.setState({showImportFailedModal: true});\r\n  }\r\n\r\n  private _hideImportFailedModal() {\r\n    this.setState({showImportFailedModal: false});\r\n  }\r\n\r\n  private _showImportSuccessModal() {\r\n    this.setState({showImportSuccessModal: true});\r\n  }\r\n\r\n  private _hideImportSuccessModal() {\r\n    this.setState({showImportSuccessModal: false});\r\n  }\r\n\r\n  public render() {\r\n    let idx = 0;\r\n    return <div>\r\n        <h3>History</h3>\r\n        {this.props.sessions.length === 0 \r\n          ? <span>No Sessions</span>\r\n          : <div className=\"history-panel-sessions\">\r\n              <div className=\"header col1\">Date</div>\r\n              <div className=\"header col2\">Units</div>\r\n              <div className=\"header col3\">Session Max</div>\r\n              <div className=\"header col4\">Rolling Weekly</div>\r\n              <div className=\"header col5\">Weekly Max</div>\r\n            {this.props.sessions.map(session => {\r\n                  return <React.Fragment key={'session-' + (idx++)}>\r\n                    <div className=\"col1\"><DateDisplay datetime={session.date} format=\"YYYY-MM-DD\"></DateDisplay></div> \r\n                    <div className=\"col2\"><NumberDisplay number={session.unitsConsumed} decimalPlaces={1}></NumberDisplay></div>\r\n                    <div className=\"col3\"><NumberDisplay number={session.sessionMax} decimalPlaces={1}></NumberDisplay></div>\r\n                    <div className=\"col4\"><NumberDisplay number={session.rollingWeekly} decimalPlaces={1}></NumberDisplay></div>\r\n                    <div className=\"col5\"><NumberDisplay number={session.weeklyMax} decimalPlaces={1}></NumberDisplay></div>\r\n                  </React.Fragment>\r\n                })}\r\n            </div>\r\n        }\r\n        <div className=\"history-panel-buttons\">\r\n          <button className=\"btn btn-danger delete-history-button\" disabled={this.props.sessions.length === 0} onClick={this.props.deleteHistory}>Delete History</button>\r\n          <div className=\"history-panel-buttons-import-export\">\r\n            <button className=\"btn export-button\" disabled={this.props.sessions.length === 0} onClick={this._exportHistory.bind(this)}>Export History</button>\r\n            <label className=\"btn import-label\" htmlFor=\"upload-file\">Import History</label>\r\n            <input type=\"file\" name=\"file\" id=\"upload-file\" accept=\".csv\" onChange={(event) => this._importHistory(event.target.files![0])}/>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          title=\"Import Error\"\r\n          show={this.state.showImportFailedModal}\r\n          buttonText=\"Ok\" \r\n          handleClose={this._hideImportFailedModal.bind(this)}\r\n        >Import file format was not valid.</Modal>\r\n        <Modal\r\n          title=\"Import Success\"\r\n          show={this.state.showImportSuccessModal}\r\n          buttonText=\"Ok\" \r\n          handleClose={this._hideImportSuccessModal.bind(this)}\r\n        >History import was successful.</Modal>\r\n      </div>\r\n  }\r\n}\r\n\r\nexport { HistoryPanel };\r\n","import { VolumeUnit } from \"./unit\";\r\n\r\nconst MillilitersPerOunce = 29.574;\r\n\r\nexport class Drink {\r\n  private _volume: number;\r\n  private _volumeUnit: VolumeUnit;\r\n  private _abv: number;\r\n  private _time: Date;\r\n  \r\n  public constructor(volume: number, volumeUnit: VolumeUnit, abv: number, time?: Date) {\r\n    this._volume = volume;\r\n    this._volumeUnit = volumeUnit;\r\n    this._abv = abv;\r\n    this._time = time || new Date();\r\n  }\r\n\r\n  public get volume(): number {\r\n    return this._volume;\r\n  }\r\n\r\n  public get volumeUnit(): VolumeUnit {\r\n    return this._volumeUnit;\r\n  }\r\n\r\n  public get abv(): number {\r\n    return this._abv;\r\n  }\r\n\r\n  public get time(): Date {\r\n    return this._time;\r\n  }\r\n\r\n  /* Calculation based on nhs.uk:\r\n  * You can work out how many units there are in any drink by multiplying the \r\n  * total volume of a drink (in ml) by its ABV (measured as a percentage) and \r\n  * dividing the result by 1,000.\r\n  * strength (ABV) x volume (ml) ÷ 1,000 = units\r\n  * For freedom units, convert from oz to ml first.\r\n  */\r\n public get alcoholUnits(): number {\r\n    const volume = this._volumeUnit === VolumeUnit.Ounces ? this._volume * MillilitersPerOunce : this._volume;\r\n    const units = this._abv * volume / 1000;\r\n    return units;\r\n  }\r\n}\r\n","export enum InstallResult {\r\n    ACCEPTED,\r\n    REJECTED\r\n}\r\n\r\nexport enum DisplayMode {\r\n    BROWSERTAB,\r\n    STANDALONE,\r\n    STANDALONEIOS\r\n}\r\n\r\nexport class InstallService {\r\n    private _deferredPrompt: any = null;\r\n    private _installCallbacks: (() => void)[] = [];\r\n    private _installAvailableCallbacks: (() => void)[] = [];\r\n    private _displayModeCallbacks: ((result: DisplayMode) => void)[] = [];\r\n    private _installResult: InstallResult = InstallResult.REJECTED;\r\n    private _isInstallable: boolean = false;\r\n    private _displayMode = DisplayMode.BROWSERTAB;\r\n    private _displayModeIsSet = false;\r\n\r\n    public constructor() {\r\n        window.addEventListener('beforeinstallprompt', (e: Event) => {\r\n            this._isInstallable = true;\r\n            e.preventDefault();\r\n            this._deferredPrompt = e;\r\n            this._onInstallAvailable();\r\n        });\r\n        \r\n        window.addEventListener('DOMContentLoaded', () => {\r\n            if (navigator.hasOwnProperty('standalone')) {\r\n                this._displayMode = DisplayMode.STANDALONEIOS\r\n            }\r\n            if (window.matchMedia('(display-mode: standalone)').matches) {\r\n                this._displayMode = DisplayMode.STANDALONE;\r\n            }\r\n            this._displayModeIsSet = true;\r\n            this._onDisplayModeSet();\r\n        });\r\n    }\r\n\r\n    public addDisplayModeSetListener(callback: (result: DisplayMode) => void): void {\r\n        this._displayModeCallbacks.push(callback);\r\n        if (this._displayModeIsSet) {\r\n            callback(this._displayMode);\r\n        } else {\r\n            this._displayModeCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    private _onDisplayModeSet(): void {\r\n        for (const callback of this._displayModeCallbacks) {\r\n            callback(this._displayMode);\r\n        }\r\n    }\r\n\r\n    public addInstallAvailableListener(callback: () => void): void {\r\n        if (this._isInstallable) {\r\n            callback();\r\n        } else {\r\n            this._installAvailableCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    private _onInstallAvailable(): void {\r\n        for (const callback of this._installAvailableCallbacks) {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    public promptToInstall(callback: () => void) {\r\n        if (!this._isInstallable) {\r\n            throw new Error(\"App is not currently installable.\");\r\n        }\r\n\r\n        this._installCallbacks.push(callback);\r\n\r\n        // Show the install prompt\r\n        this._deferredPrompt.prompt();\r\n        // Wait for the user to respond to the prompt\r\n        this._deferredPrompt.userChoice.then((choiceResult: any) => {\r\n            if (choiceResult.outcome === 'accepted') {\r\n                this._installResult = InstallResult.ACCEPTED;\r\n                this._onInstall();\r\n            } else {\r\n                this._installResult = InstallResult.REJECTED;\r\n            }\r\n        });\r\n    }\r\n\r\n    public addInstallListener(callback: () => void): void {\r\n        if (this._installResult === InstallResult.ACCEPTED) {\r\n            callback();\r\n        } else {\r\n            this._installCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    private _onInstall(): void {\r\n        for (const callback of this._installCallbacks) {\r\n            callback();\r\n        }\r\n    }\r\n}","import React, { FunctionComponent } from 'react';\r\n\r\nexport interface ITimeDisplay {\r\n  datetime: Date;\r\n  twentyFourHourDisplay?: boolean;\r\n}\r\n\r\nexport const TimeDisplay: FunctionComponent<ITimeDisplay> = ({datetime, twentyFourHourDisplay}) => {\r\n  const baseHours = datetime.getHours(); \r\n  const displayHours = twentyFourHourDisplay || baseHours < 13 ? baseHours : baseHours - 12;\r\n  const baseMinutes = datetime.getMinutes();\r\n  const displayMinutes = baseMinutes > 9 ? `${baseMinutes}` : `0${baseMinutes}`;\r\n  const amPm = twentyFourHourDisplay ? '' : baseHours > 11 ? 'PM' : 'AM';\r\n  const display = `${displayHours}:${displayMinutes} ${amPm}`;\r\n  return <span>{display}</span>;\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Drink } from '../../model/drink';\r\nimport { TimeDisplay } from '../time-display/time-display';\r\nimport { NumberDisplay } from '../number-display/number-display';\r\nimport './last-drink-display.scss';\r\n\r\nexport interface ILastDrinkDisplay {\r\n  deleteDrink(): void;\r\n  drink: Drink;\r\n}\r\n\r\nexport const LastDrinkDisplay: FunctionComponent<ILastDrinkDisplay> = ({drink, deleteDrink}) => {\r\n  return <span>\r\n    <NumberDisplay number={drink.alcoholUnits} decimalPlaces={1}></NumberDisplay> units \r\n    (<NumberDisplay number={drink.volume} decimalPlaces={1}></NumberDisplay> {drink.volumeUnit} × <NumberDisplay number={drink.abv} decimalPlaces={1}></NumberDisplay>%) \r\n    @<TimeDisplay datetime={drink.time}></TimeDisplay>\r\n    <button className=\"btn-x\" onClick={deleteDrink}>×</button>\r\n  </span>;\r\n}\r\n","import * as React from 'react';\r\nimport { VolumeUnit } from '../../../model/unit';\r\nimport { Drink } from '../../../model/drink';\r\nimport { NumberDisplay } from '../../number-display/number-display';\r\nimport { TimeDisplay } from '../../time-display/time-display';\r\nimport { LastDrinkDisplay } from '../../last-drink-display/last-drink-display';\r\nimport './active-session-panel.scss';\r\n\r\nexport interface IActiveSessionPanelProps {\r\n  addDrink(drink: Drink): void;\r\n  finishSession(): void;\r\n  cancelSession(): void;\r\n  deleteLastDrink(): void;\r\n  lastDrink: Drink | null;\r\n  nextDrinkTime: Date | null;\r\n  sessionTotal: number;\r\n  sessionRemaining: number;\r\n  sessionMax: number;\r\n  hourlyRate: number;\r\n  hourlyRateMax: number;\r\n  rollingWeeklyTotal: number;\r\n  rollingWeeklyRemaining: number;\r\n  rollingWeeklyMax: number;\r\n  lastVolume: number;\r\n  lastAbv: number;\r\n  lastVolumeUnit: VolumeUnit;\r\n}\r\n\r\ninterface IActiveSessionPanelState {\r\n  currentVolume: string;\r\n  currentVolumeUnit: VolumeUnit;\r\n  currentAbv: string;\r\n}\r\n\r\nexport class ActiveSessionPanel extends React.Component<IActiveSessionPanelProps, IActiveSessionPanelState> {\r\n  constructor(props: IActiveSessionPanelProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentVolume: props.lastVolume.toString(),\r\n      currentAbv: props.lastAbv.toString(),\r\n      currentVolumeUnit: props.lastVolumeUnit\r\n    };\r\n  }\r\n\r\n  private _handleChangeVolume(value: string): void {\r\n    this.setState({currentVolume: value});\r\n  }\r\n  \r\n  private _handleChangeUnit(value: string): void {\r\n    const unit = value as keyof typeof VolumeUnit;\r\n    this.setState({currentVolumeUnit: VolumeUnit[unit]});\r\n  }\r\n\r\n  private _handleChangeAbv(value: string): void {\r\n    this.setState({currentAbv: value});\r\n  }\r\n\r\n  private _addDrink() {\r\n    if (!this._formIsValid()) return;\r\n    const volume = parseFloat(this.state.currentVolume);\r\n    const abv = parseFloat(this.state.currentAbv);\r\n    const drink = new Drink(volume, this.state.currentVolumeUnit, abv);\r\n    this.props.addDrink(drink);\r\n  }\r\n\r\n  private _formIsValid() {\r\n    return this._isvolumeValid() && this._isAbvValid();\r\n  }\r\n\r\n  private _isvolumeValid(): boolean {\r\n    return this.state.currentVolume !== null && this.state.currentVolume.trim().length > 0;\r\n  }\r\n\r\n  private _isAbvValid(): boolean {\r\n    return this.state.currentAbv !== null && this.state.currentAbv.trim().length > 0;\r\n  }\r\n\r\n  private _cancelSession(): void {\r\n    this.props.cancelSession();\r\n  }\r\n\r\n  private _isOverSessionMax(): boolean {\r\n    return this.props.sessionTotal > this.props.sessionMax;\r\n  }\r\n\r\n  private _isOverWeeklyMax(): boolean {\r\n    return this.props.rollingWeeklyTotal > this.props.rollingWeeklyMax;\r\n  }\r\n\r\n  private _isOverRate(): boolean {\r\n    return this.props.hourlyRate > this.props.hourlyRateMax;\r\n  }\r\n\r\n\r\n  public render() {\r\n    return <div>\r\n      <div><strong>Add Drink</strong></div>\r\n      <div className=\"add-drink\">\r\n        <div>\r\n          <strong>Volume</strong>\r\n        </div>\r\n        <input \r\n          type=\"number\" \r\n          value={this.state.currentVolume} \r\n          size={6} \r\n          min={1}\r\n          max={1750}\r\n          name=\"volume\"\r\n          onChange={e => this._handleChangeVolume(e.target.value)}\r\n        ></input>\r\n          <select value={this.state.currentVolumeUnit} onChange={e => this._handleChangeUnit(e.target.value)}>\r\n            <option value={VolumeUnit.Ounces}>Ounces</option>\r\n            <option value={VolumeUnit.Milliliters}>Milliliters</option>\r\n          </select>\r\n        <div><strong>ABV</strong></div>\r\n        <input \r\n            type=\"number\" \r\n            value={this.state.currentAbv} \r\n            size={5} \r\n            min={0.1}\r\n            max={99.9}\r\n            step={0.5}\r\n            name=\"maxPerWeekInput\"\r\n            onChange={e => this._handleChangeAbv(e.target.value)}\r\n          ></input>\r\n        <div className=\"add-drink-button\">\r\n          <button className={\r\n            this._isOverSessionMax() || this._isOverRate() || this._isOverWeeklyMax() ? \"btn btn-danger\" : \"btn\"} onClick={this._addDrink.bind(this)}>Add</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"drinks\">\r\n        <div><strong>Last Drink</strong></div>\r\n        <div className=\"active-session-field-value\">{this.props.lastDrink \r\n          ? <LastDrinkDisplay deleteDrink={this.props.deleteLastDrink} drink={this.props.lastDrink}></LastDrinkDisplay>\r\n          : <span>--</span>}\r\n        </div>\r\n        <div><strong>Next Drink</strong></div>\r\n        <div className=\"active-session-field-value\">{this.props.nextDrinkTime \r\n          ? <TimeDisplay datetime={this.props.nextDrinkTime}></TimeDisplay>\r\n          : <span>--</span>}\r\n        </div>\r\n      </div>\r\n      <div className=\"stats\">\r\n        <div><strong>Session Total</strong></div>\r\n        <div className={this._isOverSessionMax() ? \"active-session-field-value active-session-warning\" : \"active-session-field-value\"} title={this._isOverSessionMax() ? \"Warning: Over maximum drinks per session.\": \"\"}>\r\n          <NumberDisplay number={this.props.sessionTotal} decimalPlaces={1}></NumberDisplay>\r\n          {this._isOverSessionMax()\r\n          ? <span className=\"active-session-warning-icon\"><strong>!</strong></span> \r\n          : null}\r\n        </div>\r\n        <div><strong>Session Remaining</strong></div>\r\n        <div className={this._isOverSessionMax() ? \"active-session-field-value active-session-warning\" : \"active-session-field-value\"}><NumberDisplay number={this.props.sessionRemaining} decimalPlaces={1}></NumberDisplay></div>\r\n        <div><strong>Rolling Hourly Rate</strong></div>\r\n        <div className={this._isOverRate() ? \"active-session-field-value active-session-warning\" : \"active-session-field-value\"}><NumberDisplay number={this.props.hourlyRate} decimalPlaces={1}></NumberDisplay></div>\r\n        <div><strong>Rolling Weekly Total</strong></div>\r\n        <div className={this._isOverWeeklyMax() ? \"active-session-field-value active-session-warning\" : \"active-session-field-value\"}><NumberDisplay number={this.props.rollingWeeklyTotal} decimalPlaces={1}></NumberDisplay></div>\r\n        <div><strong>Rolling Weekly Remaining</strong></div>\r\n        <div className={this._isOverWeeklyMax() ? \"active-session-field-value active-session-warning\" : \"active-session-field-value\"}><NumberDisplay number={this.props.rollingWeeklyRemaining} decimalPlaces={1}></NumberDisplay></div>\r\n        <div className=\"active-session-buttons\">\r\n          <button className=\"btn\" onClick={this.props.finishSession}>Finish Session</button>\r\n          <button className=\"btn btn-danger\" onClick={this._cancelSession.bind(this)}>Cancel Session</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n","import { Drink } from \"./drink\";\r\n\r\nexport class ActiveSession {\r\n  private _drinks: Drink[] = [];\r\n  private _sessionMax: number;\r\n  private _date: Date = new Date();\r\n  private _targetHourlyRate: number;\r\n\r\n  public constructor(sessionMax: number, targetHourlyRate: number) {\r\n    this._sessionMax = sessionMax;\r\n    this._targetHourlyRate = targetHourlyRate;\r\n  }\r\n\r\n  public addDrink(drink: Drink): void {\r\n    this._drinks.push(drink);\r\n  }\r\n\r\n  public deleteLast(): void {\r\n    this._drinks.splice(this._drinks.length - 1, 1);\r\n  }\r\n\r\n  public get drinks(): Drink[] {\r\n    return this._drinks;\r\n  }\r\n  \r\n  public get lastDrink(): Drink | null {\r\n    return this._drinks.length > 0 ? this._drinks[this._drinks.length - 1] : null;\r\n  }\r\n\r\n  public get date(): Date {\r\n    return this._date;\r\n  }\r\n\r\n  public set date(date: Date) {\r\n    this._date = date;\r\n  }\r\n  \r\n  public get unitsConsumed(): number {\r\n    return this._drinks.reduce((prevValue, value) => prevValue + value.alcoholUnits, 0);\r\n  }\r\n\r\n  public get sessionMax(): number {\r\n    return this._sessionMax;\r\n  }\r\n  \r\n  public get sessionRemaining(): number {\r\n    const remaining = this._sessionMax - this.unitsConsumed;\r\n    return remaining < 0 ? 0 : remaining;\r\n  }\r\n\r\n  public get hourlyRate(): number {\r\n    if (this._drinks.length === 0) {\r\n      return 0;\r\n    }\r\n    const startTime = this._drinks[0].time;\r\n    const currentTime = new Date();\r\n\r\n    const timeDiff = (currentTime.valueOf() - startTime.valueOf()) / 1000 / 60 / 60 + 1;\r\n    return this.unitsConsumed / timeDiff;\r\n  }\r\n\r\n  public get targetHourlyRate(): number {\r\n    return this._targetHourlyRate;\r\n  }\r\n\r\n  public get nextDrinkTime(): Date | null {\r\n    if (!this.lastDrink) {\r\n      return null;\r\n    }\r\n    return new Date(this.lastDrink.time.valueOf() + (this.lastDrink!.alcoholUnits / this._targetHourlyRate) * 60 * 60 * 1000);\r\n  }\r\n}","import { HistoricalSession } from \"./historical-session\";\r\n\r\nexport class History {\r\n  private _sessions: HistoricalSession[];\r\n\r\n  public constructor(sessions?: HistoricalSession[]) {\r\n    this._sessions = sessions || [];\r\n  }\r\n\r\n  public addSession(session: HistoricalSession): void {\r\n    this._sessions.push(session);\r\n  }\r\n\r\n  public get sessions(): HistoricalSession[] {\r\n    return this._sessions;\r\n  }\r\n\r\n}\r\n","import * as React from 'react';\r\n\r\nexport interface INoSessionPanelProps {\r\n  onBeginNewSession(): void;\r\n}\r\n\r\nexport class NoSessionPanel extends React.Component<INoSessionPanelProps, any> {\r\n  public render() {\r\n    return <div>\r\n      <h3>No Active Sessions</h3>\r\n      <div>\r\n        <button className=\"btn\" onClick={this.props.onBeginNewSession}>Begin New Session</button>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n","\r\nexport class HistoricalSession {\r\n  private _unitsConsumed: number;\r\n  private _sessionMax: number;\r\n  private _weeklyMax: number;\r\n  private _rollingWeekly: number;\r\n  private _date: Date;\r\n\r\n  public constructor(\r\n    unitsConsumed: number, \r\n    date: Date, \r\n    sessionMax: number, \r\n    weeklyMax: number, \r\n    rollingWeekly: number\r\n  ) {\r\n    this._unitsConsumed = unitsConsumed;\r\n    this._sessionMax = sessionMax;\r\n    this._weeklyMax = weeklyMax;\r\n    this._rollingWeekly = rollingWeekly;\r\n    this._date = date;\r\n  }\r\n\r\n  public get date(): Date {\r\n    return this._date;\r\n  }\r\n  \r\n  public get unitsConsumed(): number {\r\n    return this._unitsConsumed;\r\n  }\r\n\r\n  public get sessionMax(): number {\r\n    return this._sessionMax;\r\n  }\r\n  \r\n  public get weeklyMax(): number {\r\n    return this._weeklyMax;\r\n  }\r\n\r\n  public get rollingWeekly(): number {\r\n    return this._rollingWeekly;\r\n  }\r\n  \r\n  public get isSessionOk(): boolean {\r\n    return this._unitsConsumed <= this._sessionMax;\r\n  }\r\n\r\n  public get isWeeklyOk(): boolean {\r\n    return this._rollingWeekly <= this._weeklyMax;\r\n  }\r\n}","import * as React from 'react';\r\nimport './modal-true-false-selection.scss';\r\n\r\nexport interface ITrueFalseSelectionModalProps {\r\n  handleClose(response: boolean): void;\r\n  show?: boolean;\r\n  acceptText: string;\r\n  rejectText: string;\r\n  title:string;\r\n}\r\n\r\nexport class TrueFalseSelectionModal extends React.Component<ITrueFalseSelectionModalProps, any> {\r\n  private _showHideClassName(): string {\r\n    return this.props.show ? 'modal-true-false modal-true-false-display-block' : 'modal-true-false modal-true-false-display-none';\r\n  }\r\n\r\n  public render() {\r\n    return <div className={this._showHideClassName()}>\r\n        <div className=\"modal-true-false-main\">\r\n          <div className=\"modal-true-false-title\">{this.props.title}</div>\r\n          <div className=\"modal-true-false-content\">{this.props.children}</div>\r\n          <div className=\"modal-true-false-buttons\">\r\n            <button className=\"modal-true-false-buttons-reject\" onClick={() => this.props.handleClose(false)}>{this.props.rejectText}</button>\r\n            <span className=\"modal-true-false-buttons-spacer\"></span>\r\n            <button className=\"modal-true-false-buttons-accept\" onClick={() => this.props.handleClose(true)}>{this.props.acceptText}</button>\r\n          </div>\r\n        </div>\r\n      </div>;\r\n  }\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nexport const AboutPanel: FunctionComponent = () => {\r\n    return <div>\r\n        <h3>About</h3>\r\n        <div>\r\n            <p><strong>Alcohol Units</strong></p>\r\n            <p>This application uses Acohol Units to track alcohol consumption.  An alcohol unit is defined as 10ml or 8g of pure alcohol; this definition is provided by the <span>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.nhs.uk/live-well/alcohol-support/calculating-alcohol-units/\" title=\"Alcohol Units - NHS\">National Health Service (UK)</a></span>.\r\n            </p>\r\n            <p>As such, the defaults for alcohol consumption in this app are set to amount recommended by the NHS: a maximum of 14 units per week.  You may changes these settings, but you do so at your own risk.</p>\r\n            <p>Also note that an alcohol unit is roughly (but not precisely!) equivalent to 1/2 of a U.S. \"standard\" drink.</p>\r\n            <p><strong>Data Persistence</strong></p>\r\n            <p>All settings, current session data, and session history are stored only in the local browser storage. \r\n                This means the data will only be available in the current browser and device.  \r\n                If you wish to move the data to another browser or device, you will need to export it \r\n                (.csv format) from the History tab and import in the History tab of the target browser/device.</p>\r\n            <p>While this isn't as convenient as cloud storage, it allows you to own the data, and prevents selling, theft, or misuse of the data.</p>\r\n        </div>\r\n        <p><strong>Author &amp; License</strong></p>\r\n        <p>This application was created by <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.github.com/shaunlusk\" title=\"Shaun Lusk\">Shaun Lusk</a>. It is licensed under the MIT open source license (see LICENSE file in source code for more details).</p>\r\n        <p><strong>Credits</strong></p>\r\n        <p>\r\n            Icon made by <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.flaticon.com/authors/good-ware\" title=\"Good Ware\">Good Ware</a> from <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\r\n        </p>\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport './disclaimer.scss';\r\n\r\nexport interface IDisclaimerProps {\r\n    accept(): void;\r\n}\r\n\r\ninterface IDisclaimerState {\r\n    accepted: boolean;\r\n}\r\n\r\nexport class Disclaimer extends React.Component<IDisclaimerProps, IDisclaimerState> {\r\n    public constructor(props: IDisclaimerProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            accepted: false\r\n        }\r\n    }\r\n\r\n    private _setAccepted(value: boolean): void {\r\n        this.setState({accepted: value});\r\n    }\r\n\r\n    private _submit(): void {\r\n        if (this.state.accepted) {\r\n            window.scroll({\r\n                top: 0, \r\n                left: 0, \r\n                behavior: 'smooth'\r\n            });\r\n            this.props.accept();\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"disclaimer-blackout\">\r\n                <div className=\"disclaimer-main\">\r\n                    <h3>Terms and Conditions</h3>\r\n                    <div className=\"disclaimer-content\">\r\n                        <p><strong>General</strong></p>\r\n                        <p>You the user of this application agree to accept sole responsibility for the \r\n                            usage of this application and any consequences resulting from the usage of \r\n                            this app.  You agree to absolve the author of any consequences resulting \r\n                            from this app or its usage.\r\n                        </p>\r\n                        <p><strong>Health Disclaimer</strong></p>\r\n                        <p>You must be at least the minimum age to consume alcohol in your jurisdiction.\r\n                            To use this app, you agree to first consult with your doctor about the effects \r\n                            of reducing or eliminating alcohol consumption; some individuals may have serious \r\n                            life threatening side effects associated with sudden alcohol withdrawal.\r\n                        </p>\r\n                        <p>This app exists purely to help with tracking alcohol consumption.  By using this \r\n                            app, you agree not to consume more than the recommended about of alcohol as \r\n                            defined by your jurisdictions health services or your doctor, whichever is less.  \r\n                            If no such health service exists in your jurisdiction and/or no doctor is available \r\n                            to you, you agree not to use this app.\r\n                        </p>\r\n                        <p>You agree not to increase your current alcohol consumption while using this app.\r\n                        </p>\r\n                        <p>If you have any existing health issues that might be exacerbated by drinking alcohol, \r\n                            or potential health issues that might result from drinking, or reducing alcohol consumption, \r\n                            you agree not to use this app.\r\n                        </p>\r\n                        <p><strong>Data Disclaimer</strong></p>\r\n                        <p>This application collects data in local browser storage.  It is not transmitted or made \r\n                            available to anyone through the application or site. You own the data and may delete or \r\n                            transmit it at your own discretion.\r\n                        </p>\r\n                        <p>It may be possible for other websites to track your usage of this site; you agree to \r\n                            indemnify the author for any such occurances.\r\n                        </p>\r\n                        <p><strong>Software Disclaimer</strong></p>\r\n                        <p>This application is provided \"as is\" and \"as available\", with no warranty, and no \r\n                            gaurantee of fitness for a particular purpose.\r\n                        </p>\r\n                        <p>This is free and open source software, issued under the MIT license (source code and \r\n                            license available at <a href=\"https://github.com/shaunlusk/less-tipsy\">https://github.com/shaunlusk/less-tipsy</a>).\r\n                        </p>\r\n\r\n                        <p><strong>Jurisdiction Disclaimer</strong></p>\r\n                        <p>If any of these terms is not enforceable or is prohibited by law, or cannot otherwise be \r\n                            applied, you agree not to use this application.\r\n                        </p>\r\n                        <p><strong>Miscellaneous</strong></p>\r\n                        <p>These terms are subject to change without notice.</p>\r\n                        <p>By using this app, you accept these terms in their entirety.</p>\r\n                        <p>Please drink responsibly.</p>\r\n                        <p><input type=\"checkbox\" id=\"accept-check\" onChange={(e) => this._setAccepted(e.target.checked)} checked={this.state.accepted}></input>\r\n                            <label htmlFor=\"accept-check\">I Agree to the terms.</label></p>\r\n                        <div className=\"disclaimer-buttons\">\r\n                            <button className=\"btn btn-accept disclaimer-buttons-accept\" onClick={() => this._submit()}>I Accept</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nexport interface IHowToPanelProps {\r\n    viewedHowToPanel(): void;\r\n}\r\n\r\nexport const HowToPanel: FunctionComponent<IHowToPanelProps> = ({viewedHowToPanel}) => {\r\n    viewedHowToPanel();\r\n    return <div>\r\n        <h3>How-To</h3>\r\n        <p>This application tracks alcohol consumption.  Consumption is tracked using alcohol units.  See the 'About' tab for more information on this calculation.</p>\r\n        <p><strong>Basic Usage</strong></p>\r\n        <p>To begin a new session, click the 'Session' tab, and click the 'Begin New Session' button. \r\n        </p>\r\n        <p>\r\n            From there, every time you start a new drink, fill in the drink volume and ABV percentage, and click 'Add'.\r\n            This will add the drink to your current session. \r\n        </p>\r\n        <p>\r\n            To remove the last drink, click the 'x' button, next to the last drink entry.\r\n        </p>\r\n        <p>\r\n            To Finish or Cancel the current session, click the appropriate button at the bottom of the session panel.\r\n        </p>\r\n        <p>\r\n            Your drinks will be tracked, and the session summary shown in the lower of the Session tab.\r\n            All calculations of rates and alcohol units remaining are based on your Settings.\r\n        </p>\r\n            <ul>\r\n                <li>The Last Drink section shows the detail about the last drink consumed.</li>\r\n                <li>The Next Drink section shows the time for your next drink, based on your configured consumption rate.</li>\r\n                <li>Session Total shows the total alcohol units you have consumed this session.</li>\r\n                <li>Session Remaining shows how many alcohol units you are allowed for the remainder of this session.</li>\r\n                <li>Rolling Hourly rate shows how many alcohol units you have consumed per hour on average for the current session.</li>\r\n                <li>Rolling Weekly Total shows the total alcohol units you have consumed over the past 7 days, including the current session.</li>\r\n                <li>Rolling Weekly Remaining shows how many alcohol units your are allowed for the current week.</li>\r\n            </ul>\r\n        <p>\r\n            Any totals or limits that are exceeded will be shown in red; as well the 'Add' button will turn red.\r\n        </p>\r\n        <h3>Settings</h3>\r\n        <p>The settings tab lets you configure:</p>\r\n        <ul>\r\n            <li>The maximum allowed alcohol units per session.</li>\r\n            <li>The maximum allowed alcohol units per week.</li>\r\n            <li>The recommended consumption rate in units per hours.</li>\r\n            <li>The number of sessions to be stored in the history tab.</li>\r\n        </ul>\r\n        <h3>History</h3>\r\n        <p>The history tab tracks your sessions by date. This information is only stored locally in the browser; it is not transmitted elsewhere (see About tab).\r\n        </p><p>\r\n            If you wish to move your history to another device you will need to export it from the current device, then import the file on the target device.\r\n        </p>\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport './main-panel.scss';\r\nimport { Tabs } from '../tabs/tabs';\r\nimport { Tab } from '../tabs/tab';\r\nimport { SettingsPanel } from '../settings-panel/settings-panel';\r\nimport { HistoryPanel } from '../history-panel/history-panel';\r\nimport { SettingsService } from '../../services/settings-service';\r\nimport { ActiveSessionPanel } from '../session-panel/active-session-panel/active-session-panel';\r\nimport { ActiveSession } from '../../model/active-session';\r\nimport { VolumeUnit } from '../../model/unit';\r\nimport { Drink } from '../../model/drink';\r\nimport { History } from '../../model/history';\r\nimport { NoSessionPanel } from '../session-panel/no-session-panel/no-session-panel';\r\nimport { SessionService } from '../../services/session-service';\r\nimport { HistoricalSession } from '../../model/historical-session';\r\nimport { HistoryService } from '../../services/history-service';\r\nimport { TrueFalseSelectionModal } from '../modal-true-false-selection/modal-true-false-selection';\r\nimport { IHistorySessionDto } from '../../model/history-session-dto';\r\nimport { AboutPanel } from '../about-panel/about-panel';\r\nimport { MainStateService } from '../../services/main-state-service';\r\nimport { Disclaimer } from '../disclaimer/disclaimer';\r\nimport { HowToPanel } from '../how-to-panel/how-to-panel';\r\nimport { DisplayMode, InstallService } from '../../services/install-service';\r\n\r\nconst MINUTE = 1000 * 60;\r\nconst TIMEOUT_CHECK_INTERVAL = MINUTE * 2;\r\nconst TIMEOUT_AFTER =  MINUTE * 120;\r\n\r\ninterface ISettingsState {\r\n  sessionMax: string;\r\n  weeklyMax: string;\r\n  units: string;\r\n  hours: string;\r\n  historySessionsToKeep: string;\r\n  areInputsValid: boolean;\r\n  changesExist: boolean;\r\n}\r\n\r\ninterface ISessionState {\r\n  lastDrink: Drink | null; \r\n  nextDrinkTime: Date | null;\r\n  sessionTotal: number;\r\n  sessionRemaining: number;\r\n  sessionMax: number;\r\n  hourlyRate: number;\r\n  hourlyRateMax: number;\r\n  rollingWeeklyTotal: number;\r\n  rollingWeeklyRemaining: number;\r\n  rollingWeeklyMax: number;\r\n  lastVolume: number;\r\n  lastAbv: number;\r\n  lastVolumeUnit: VolumeUnit;\r\n}\r\n\r\ninterface IHistoricalSessionState {\r\n  unitsConsumed: number;\r\n  sessionMax: number;\r\n  weeklyMax: number;\r\n  rollingWeekly: number;\r\n  date: Date;\r\n}\r\n\r\ninterface IHistoryState {\r\n  sessions: IHistoricalSessionState[];\r\n}\r\n\r\ninterface IMainPanelState {\r\n  activeTabLabel: string;\r\n  settingsState: ISettingsState;\r\n  sessionState: ISessionState | null;\r\n  history: IHistoryState;\r\n  showCancelSessionWarning: boolean;\r\n  showDeleteHistoryWarning: boolean;\r\n  showDisclaimer: boolean;\r\n  showTimeoutPrompt: boolean;\r\n  showInstallButton: boolean;\r\n  displayMode: DisplayMode,\r\n  installable: boolean;\r\n}\r\n\r\nexport interface IMainPanelProps {\r\n  settingsService: SettingsService;\r\n  sessionService: SessionService;\r\n  historyService: HistoryService;\r\n  mainStateService: MainStateService;\r\n  installService: InstallService;\r\n  version: string;\r\n}\r\n\r\nclass MainPanel extends React.Component<IMainPanelProps, IMainPanelState> {\r\n  private _settingsService: SettingsService;\r\n  private _sessionService: SessionService;\r\n  private _historyService: HistoryService;\r\n  private _mainStateService: MainStateService;\r\n  private _installService: InstallService;\r\n  private _activeSession: ActiveSession | null;\r\n  private _history: History;\r\n  private _lastTimeoutCheckTime: Date;\r\n\r\n  constructor(props: IMainPanelProps) {\r\n    super(props);\r\n    this._settingsService = props.settingsService;\r\n    this._sessionService = props.sessionService;\r\n    this._historyService = props.historyService;\r\n    this._mainStateService = props.mainStateService;\r\n    this._installService = props.installService;\r\n    this._activeSession = this._loadSession();\r\n    this._history = this._loadHistory();\r\n\r\n    this._lastTimeoutCheckTime = this._activeSession?.lastDrink?.time || new Date();\r\n    this._setCheckForTimeout();\r\n\r\n    const viewedHowToTab = this._mainStateService.viewedHowToTab;\r\n    this.state = {\r\n      activeTabLabel: viewedHowToTab ? 'Session' : 'How-To',\r\n      sessionState: this._activeSession ? this._getUpdatedSessionState() : null,\r\n      history: this._history,\r\n      showCancelSessionWarning: false,\r\n      showDeleteHistoryWarning: false,\r\n      settingsState: this._getSettingsStateFromService(),\r\n      showDisclaimer: !this._mainStateService.acceptedDisclaimer,\r\n      showTimeoutPrompt: this._passedTimeout(),\r\n      showInstallButton: false,\r\n      displayMode: DisplayMode.BROWSERTAB,\r\n      installable: false\r\n    };\r\n  }\r\n\r\n  public componentDidMount():void {\r\n    this._installService.addDisplayModeSetListener(result => {\r\n      this.setState(prevState => {\r\n        return {\r\n          showInstallButton: result === DisplayMode.BROWSERTAB && prevState.installable,\r\n          displayMode: result\r\n        };\r\n      });\r\n    });\r\n    this._installService.addInstallAvailableListener(() => {\r\n      this.setState(prevState => {\r\n        return {\r\n          showInstallButton: prevState.displayMode === DisplayMode.BROWSERTAB,\r\n          installable: true\r\n        };\r\n      });\r\n    });\r\n  }\r\n\r\n  private _promptForInstall(): void {\r\n    this._installService.promptToInstall(() => {\r\n      this.setState({showInstallButton: false});\r\n    });\r\n  }\r\n\r\n  private _checkTimeForTimeout(): void {\r\n    if (this._passedTimeout()) {\r\n      this.setState({\r\n        showTimeoutPrompt: true,\r\n        activeTabLabel: 'Session'\r\n      });\r\n    }\r\n  }\r\n\r\n  private _setCheckForTimeout(): void {\r\n    setInterval(this._checkTimeForTimeout.bind(this), TIMEOUT_CHECK_INTERVAL);\r\n  }\r\n\r\n  private _passedTimeout(): boolean {\r\n    if (!this._activeSession) {\r\n      return false;\r\n    }\r\n    const currentTime = new Date();\r\n\r\n    const diff = currentTime.valueOf() - this._lastTimeoutCheckTime.valueOf();\r\n    if (diff >= TIMEOUT_AFTER) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private _acceptDisclaimer(): void {\r\n    this._mainStateService.acceptedDisclaimer = true;\r\n    this.setState({showDisclaimer: false});\r\n  }\r\n\r\n  private _loadHistory(): History {\r\n    let history = this._historyService.loadHistory();\r\n    if (!history) {\r\n      history = new History();\r\n    }\r\n    return history;\r\n  }\r\n\r\n  private _loadSession(): ActiveSession | null {\r\n    let activeSession = this._sessionService.loadSession();\r\n    return activeSession;\r\n  }\r\n\r\n  private _refreshHistory(): void {\r\n    this._historyService.saveHistory(this._history);\r\n    this._history = this._loadHistory();\r\n    this.setState({history: this._getUpdatedHistorySate()});\r\n  }\r\n\r\n  private _refreshSettings(): void {\r\n    const newSettingsState = this._getSettingsStateFromService();\r\n    this.setState({settingsState: newSettingsState});\r\n  }\r\n\r\n  private _addDrink(drink: Drink): void {\r\n    if (!this._activeSession) {\r\n      throw new Error('No Active Session.');\r\n    }\r\n    this._activeSession.addDrink(drink);\r\n    this._sessionService.saveSession(this._activeSession);\r\n    this.setState({ sessionState: this._getUpdatedSessionState() }); \r\n  }\r\n\r\n  private _changeTab(label: string) {\r\n    this.setState({activeTabLabel:label});\r\n  }\r\n\r\n  private _getRollingWeeklyRemaining(): number {\r\n    const remaining = this._settingsService.weeklyMax - this._getRollingWeeklyTotal();\r\n    return remaining < 0 ? 0 : remaining;\r\n  }\r\n\r\n  private _getUpdatedSessionState(): ISessionState {\r\n    if (!this._activeSession) {\r\n      throw new Error('No Active Session.');\r\n    }\r\n    const sessionState: ISessionState = {\r\n      lastDrink: this._activeSession.lastDrink, \r\n      nextDrinkTime: this._activeSession.nextDrinkTime,\r\n      sessionTotal: this._activeSession.unitsConsumed,\r\n      sessionRemaining: this._activeSession.sessionRemaining,\r\n      sessionMax: this._settingsService.sessionMax,\r\n      hourlyRate: this._activeSession.hourlyRate,\r\n      hourlyRateMax: this._settingsService.consumptionRate,\r\n      rollingWeeklyTotal: this._getRollingWeeklyTotal(),\r\n      rollingWeeklyRemaining: this._getRollingWeeklyRemaining(),\r\n      rollingWeeklyMax: this._settingsService.weeklyMax,\r\n      lastVolume: this._activeSession.lastDrink ? this._activeSession.lastDrink.volume : 12,\r\n      lastAbv: this._activeSession.lastDrink ? this._activeSession.lastDrink.abv : 5,\r\n      lastVolumeUnit: this._activeSession.lastDrink ? this._activeSession.lastDrink.volumeUnit : VolumeUnit.Ounces  \r\n    };\r\n\r\n    return sessionState;\r\n  }\r\n\r\n  private _getUpdatedHistorySate(): IHistoryState {\r\n    const sessions: IHistoricalSessionState[] = this._history.sessions.map(session => ({\r\n      unitsConsumed: session.unitsConsumed,\r\n      sessionMax: session.sessionMax,\r\n      weeklyMax: session.weeklyMax,\r\n      rollingWeekly: session.rollingWeekly,\r\n      date: session.date\r\n    }));\r\n    return {sessions};\r\n  }\r\n\r\n  private _beginNewSession(): void {\r\n    this._activeSession = new ActiveSession(\r\n      this._settingsService.sessionMax,\r\n      this._settingsService.consumptionRate);\r\n    this._sessionService.saveSession(this._activeSession);\r\n    this._lastTimeoutCheckTime = new Date();\r\n\r\n    this.setState({\r\n      activeTabLabel:'Session',\r\n      sessionState: this._getUpdatedSessionState()\r\n    });\r\n  }\r\n\r\n  private _getRollingWeeklyTotal(): number {\r\n    let rollingWeeklyTotal = 0;\r\n    const week = 1000 * 60 * 60 * 24 * 7;\r\n    const pastWeek = new Date(this._activeSession!.date.getTime() - week);\r\n    let idx = this._history.sessions.length - 1;\r\n    while (idx >= 0) {\r\n      const session = this._history.sessions[idx];\r\n      if (session.date < pastWeek) break;\r\n      rollingWeeklyTotal += session.unitsConsumed;\r\n      idx--;\r\n    }\r\n    return rollingWeeklyTotal + this._activeSession!.unitsConsumed;\r\n  }\r\n\r\n  private _finishSession(): void {\r\n    if (!this._activeSession) {\r\n      throw new Error('No Active Session.');\r\n    }\r\n    const histSession = new HistoricalSession(\r\n      this._activeSession.unitsConsumed,\r\n      this._activeSession.date,\r\n      this._activeSession.sessionMax,\r\n      this._settingsService.weeklyMax,\r\n      this._getRollingWeeklyTotal()\r\n    );\r\n    this._history.addSession(histSession);\r\n    this._refreshHistory();\r\n\r\n    this._activeSession = null;\r\n    this._sessionService.deleteSession();\r\n\r\n    this.setState({\r\n      activeTabLabel:'Session',\r\n      sessionState: null,\r\n      showTimeoutPrompt: false\r\n    });\r\n  }\r\n\r\n  private _warnCancelSession(): void {\r\n    this.setState({showCancelSessionWarning: true});\r\n  }\r\n\r\n  private _finishCancelSession(result: boolean): void {\r\n    if (result) {\r\n      this._activeSession = new ActiveSession(\r\n        this._settingsService.sessionMax, \r\n        this._settingsService.consumptionRate);\r\n      this._sessionService.deleteSession();\r\n      this.setState({\r\n        activeTabLabel:'Session',\r\n        sessionState: null,\r\n        showCancelSessionWarning: false\r\n      });\r\n    } else {\r\n      this.setState({showCancelSessionWarning: false});\r\n    }\r\n  }\r\n\r\n  private _warnDeleteHistory(): void {\r\n    this.setState({showDeleteHistoryWarning: true});\r\n  }\r\n\r\n  private _finishDeleteHistory(result: boolean): void {\r\n    if (result) {\r\n      this._historyService.deleteHistory();\r\n      this._history = new History();\r\n      this.setState({\r\n        history: this._history,\r\n        showDeleteHistoryWarning: false\r\n      });\r\n    }  else {\r\n      this.setState({showDeleteHistoryWarning: false});\r\n    }\r\n  }\r\n\r\n  private _areSettingsValid(newSettingsState: ISettingsState): boolean {\r\n    if (!this._hasValue(newSettingsState.weeklyMax) \r\n      || !this._hasValue(newSettingsState.sessionMax)\r\n      || !this._hasValue(newSettingsState.units)\r\n      || !this._hasValue(newSettingsState.hours)\r\n      || !this._hasValue(newSettingsState.historySessionsToKeep)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private _hasValue(value: string): boolean {\r\n    return value !== null && value.trim().length > 0;\r\n  }\r\n\r\n  private _validateStateSettings(newSettingsState: ISettingsState) {\r\n    if (this._areSettingsValid(newSettingsState)) {\r\n      newSettingsState.areInputsValid = true;\r\n    } else {\r\n      newSettingsState.areInputsValid = false;\r\n    }\r\n  }\r\n\r\n  private _handleChangeSettingSessionMax(value: string): void {\r\n    const newSettingsState: ISettingsState = {...this.state.settingsState, sessionMax: value};\r\n    if (value !== this.state.settingsState.sessionMax) {\r\n      newSettingsState.changesExist = true;\r\n    }\r\n    this._validateStateSettings(newSettingsState);\r\n    this.setState({settingsState: newSettingsState});\r\n  }\r\n\r\n  private _handleChangeSettingWeeklyMax(value: string): void {\r\n    const newSettingsState: ISettingsState = {...this.state.settingsState, weeklyMax: value};\r\n    if (value !== this.state.settingsState.weeklyMax) {\r\n      newSettingsState.changesExist = true;\r\n    }\r\n    this._validateStateSettings(newSettingsState);\r\n    this.setState({settingsState: newSettingsState});\r\n  }\r\n\r\n  private _handleChangeSettingUnits(value: string): void {\r\n    const newSettingsState: ISettingsState = {...this.state.settingsState, units: value};\r\n    if (value !== this.state.settingsState.units) {\r\n      newSettingsState.changesExist = true;\r\n    }\r\n    this._validateStateSettings(newSettingsState);\r\n    this.setState({settingsState: newSettingsState});\r\n  }\r\n\r\n  private _handleChangeSettingHours(value: string): void {\r\n    const newSettingsState: ISettingsState = {...this.state.settingsState, hours: value};\r\n    if (value !== this.state.settingsState.hours) {\r\n      newSettingsState.changesExist = true;\r\n    }\r\n    this._validateStateSettings(newSettingsState);\r\n    this.setState({settingsState: newSettingsState});\r\n  }\r\n\r\n  private _handleChangeSettingHistorySessions(value: string): void {\r\n    const newSettingsState: ISettingsState = {...this.state.settingsState, historySessionsToKeep: value};\r\n    if (value !== this.state.settingsState.historySessionsToKeep) {\r\n      newSettingsState.changesExist = true;\r\n    }\r\n    this._validateStateSettings(newSettingsState);\r\n    this.setState({settingsState: newSettingsState});\r\n  }\r\n\r\n  private _handleCancelSettingsChanges(): void {\r\n    this._refreshSettings();\r\n  }\r\n\r\n  private _handleRestoreDefaultSettings(): void {\r\n    this.props.settingsService.restoreDefaults();\r\n    this._historyService.sessionsToKeep = this.props.settingsService.historySessionsToKeep;\r\n    const newSettingsState = this._getSettingsStateFromService();\r\n    this.setState({settingsState: newSettingsState});\r\n  }\r\n\r\n  private _getSettingsStateFromService(): ISettingsState {\r\n    return {\r\n      weeklyMax: this._settingsService.weeklyMax.toString(),\r\n      sessionMax: this._settingsService.sessionMax.toString(),\r\n      units: this._settingsService.alcoholUnits.toString(),\r\n      hours: this._settingsService.hours.toString(),\r\n      historySessionsToKeep: this._settingsService.historySessionsToKeep.toString(),\r\n      areInputsValid: true,\r\n      changesExist: false\r\n    };\r\n  }\r\n  \r\n  private _handleSaveSettings(): void {\r\n    const sessionsToKeep = parseInt(this.state.settingsState.historySessionsToKeep);\r\n    this._settingsService.updateSettings({\r\n      weeklyMax: parseFloat(this.state.settingsState.weeklyMax),\r\n      sessionMax: parseFloat(this.state.settingsState.sessionMax),\r\n      alcoholUnits: parseFloat(this.state.settingsState.units),\r\n      hours: parseFloat(this.state.settingsState.hours),\r\n      historySessionsToKeep: sessionsToKeep,\r\n    });\r\n    this._historyService.sessionsToKeep = sessionsToKeep;\r\n    this._refreshHistory();\r\n    this._refreshSettings();\r\n  }\r\n\r\n  private _importHistory(sessions: IHistorySessionDto[]): void {\r\n    for (const session of sessions) {\r\n      this._history.addSession(new HistoricalSession(\r\n        session.unitsConsumed,\r\n        session.date,\r\n        session.sessionMax,\r\n        session.weeklyMax,\r\n        session.rollingWeekly\r\n      ));\r\n    }\r\n    this._history.sessions.sort((a, b) => a.date < b.date ? -1 : a.date === b.date ? 0 : 1);\r\n    this._refreshHistory();\r\n  }\r\n\r\n  private _handleDeleteLastDrink(): void {\r\n    this._activeSession!.deleteLast();\r\n    this._sessionService.saveSession(this._activeSession!);\r\n    const newSessionState = this._getUpdatedSessionState();\r\n    this.setState({sessionState: newSessionState});\r\n  }\r\n\r\n  private _handleSessionTimeout(result: boolean) {\r\n    if (result) {\r\n      this._finishSession();\r\n    } else {\r\n      this._lastTimeoutCheckTime = new Date();\r\n      this.setState({\r\n        showTimeoutPrompt: false\r\n      });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return <React.Fragment>{this.state.showDisclaimer ? <Disclaimer accept={this._acceptDisclaimer.bind(this)}></Disclaimer>\r\n      : <div>\r\n        {this.state.showInstallButton \r\n          ? <div className=\"add-button\" onClick={this._promptForInstall.bind(this)}>\r\n            <img id=\"add-icon\" alt=\"Add to Home Screen\" src=\"./beer192.png\"></img>\r\n            <label htmlFor=\"add-icon\">Add to Home Screen</label>\r\n          </div>\r\n          : null}\r\n        <Tabs activeTabLabel={this.state.activeTabLabel} activeTabChanged={this._changeTab.bind(this)}>\r\n        {this.state.sessionState ? \r\n          <Tab label=\"Session\">\r\n            <ActiveSessionPanel \r\n              addDrink={this._addDrink.bind(this)}\r\n              finishSession={this._finishSession.bind(this)}\r\n              cancelSession={this._warnCancelSession.bind(this)}\r\n              lastDrink={this.state.sessionState.lastDrink}\r\n              nextDrinkTime={this.state.sessionState.nextDrinkTime}\r\n              sessionTotal={this.state.sessionState.sessionTotal}\r\n              sessionRemaining={this.state.sessionState.sessionRemaining}\r\n              sessionMax={this.state.sessionState.sessionMax}\r\n              hourlyRate={this.state.sessionState.hourlyRate}\r\n              hourlyRateMax={this.state.sessionState.hourlyRateMax}\r\n              rollingWeeklyTotal={this.state.sessionState.rollingWeeklyTotal}\r\n              rollingWeeklyRemaining={this.state.sessionState.rollingWeeklyRemaining}\r\n              rollingWeeklyMax={this.state.sessionState.rollingWeeklyMax}\r\n              lastVolume={this.state.sessionState.lastVolume}\r\n              lastAbv={this.state.sessionState.lastAbv}\r\n              lastVolumeUnit={this.state.sessionState.lastVolumeUnit}\r\n              deleteLastDrink={this._handleDeleteLastDrink.bind(this)}\r\n            >\r\n            </ActiveSessionPanel>\r\n            <TrueFalseSelectionModal \r\n              title=\"Cancel Session?\"\r\n              show={this.state.showCancelSessionWarning}\r\n              acceptText=\"Cancel Session\" \r\n              rejectText=\"Keep Current Session\" \r\n              handleClose={this._finishCancelSession.bind(this)}\r\n            >\r\n              Are you sure you want to cancel the current session?  This cannot be undone!\r\n            </TrueFalseSelectionModal>\r\n            <TrueFalseSelectionModal \r\n              title=\"Finish Session?\"\r\n              show={this.state.showTimeoutPrompt}\r\n              acceptText=\"Finish Session\" \r\n              rejectText=\"Keep Current Session\" \r\n              handleClose={this._handleSessionTimeout.bind(this)}\r\n            >\r\n              It has been more than 2 hours since your last drink.  Would you like to finish the current session?\r\n            </TrueFalseSelectionModal>\r\n          </Tab>\r\n        : <Tab label=\"Session\">\r\n            <NoSessionPanel onBeginNewSession={this._beginNewSession.bind(this)}></NoSessionPanel>\r\n          </Tab> }\r\n        <Tab label=\"Settings\"><SettingsPanel \r\n          sessionMax={this.state.settingsState.sessionMax}\r\n          weeklyMax={this.state.settingsState.weeklyMax} \r\n          units={this.state.settingsState.units}\r\n          hours={this.state.settingsState.hours}\r\n          historySessionsToKeep={this.state.settingsState.historySessionsToKeep}\r\n          changesExist={this.state.settingsState.changesExist}\r\n          areInputsValid={this.state.settingsState.areInputsValid}\r\n          onChangeSessionMax={this._handleChangeSettingSessionMax.bind(this)}\r\n          onChangeWeeklyMax={this._handleChangeSettingWeeklyMax.bind(this)}\r\n          onChangeUnits={this._handleChangeSettingUnits.bind(this)}\r\n          onChangeHours={this._handleChangeSettingHours.bind(this)}\r\n          onChangeHistorySessions={this._handleChangeSettingHistorySessions.bind(this)}\r\n          onCancelChanges={this._handleCancelSettingsChanges.bind(this)}\r\n          onRestoreDefaults={this._handleRestoreDefaultSettings.bind(this)}\r\n          onSaveSettings={this._handleSaveSettings.bind(this)}\r\n        ></SettingsPanel></Tab>\r\n        <Tab label=\"History\">\r\n          <HistoryPanel \r\n            sessions={this.state.history.sessions} \r\n            deleteHistory={this._warnDeleteHistory.bind(this)}\r\n            importHistory={this._importHistory.bind(this)}\r\n          ></HistoryPanel>\r\n          <TrueFalseSelectionModal \r\n              title=\"Delete Session?\"\r\n              show={this.state.showDeleteHistoryWarning}\r\n              acceptText=\"Delete History\" \r\n              rejectText=\"Keep History\" \r\n              handleClose={this._finishDeleteHistory.bind(this)}\r\n            >\r\n              Are you sure you want to delete the <b>entire</b> history?  This cannot be undone!\r\n          </TrueFalseSelectionModal>\r\n        </Tab>\r\n        <Tab label=\"How-To\">\r\n          <HowToPanel viewedHowToPanel={() => this._mainStateService.viewedHowToTab = true}></HowToPanel>\r\n        </Tab>\r\n        <Tab label=\"About\">\r\n          <AboutPanel></AboutPanel>\r\n        </Tab>\r\n      </Tabs>\r\n        <div className=\"version\">Version {this.props.version}</div>\r\n      </div>}\r\n    </React.Fragment>\r\n  }\r\n}\r\n\r\nexport { MainPanel };\r\n","import { ILocalStorageService } from \"./local-storage-service\";\r\n\r\nexport interface ISettingsService {\r\n  weeklyMax: number;\r\n  sessionMax: number;\r\n  alcoholUnits: number;\r\n  hours: number;\r\n  consumptionRate: number;\r\n  historySessionsToKeep: number;\r\n}\r\n\r\nexport interface IUpdateSettingsProps {\r\n  weeklyMax: number;\r\n  sessionMax: number;\r\n  alcoholUnits: number;\r\n  hours: number;\r\n  historySessionsToKeep: number;\r\n}\r\n\r\nconst WeeklyMaxStorageKey = 'WeeklyMax';\r\nconst SessionMaxStorageKey = 'SessionMax';\r\nconst HoursStorageKey = 'HoursRate';\r\nconst AlcoholUnitsStorageKey = 'AlcoholUnitsRate';\r\nconst HistorySessionsToKeepStorageKey = 'HistorySessionsToKeep';\r\n\r\nconst DefaultWeeklyMax = 14;\r\nconst DefaultSessionMax = 4;\r\nconst DefaultHours = 1;\r\nconst DefaultAlcoholUnits = 2;\r\nconst DefaultHistorySessionsToKeep = 60;\r\n\r\nclass SettingsService implements ISettingsService {\r\n  private _storageService: ILocalStorageService;\r\n\r\n  private _weeklyMax: number = DefaultWeeklyMax;\r\n  private _sessionMax: number = DefaultSessionMax;\r\n  private _alcoholUnits: number = DefaultAlcoholUnits;\r\n  private _hours: number = DefaultHours;\r\n  private _historySessionsToKeep: number = DefaultHistorySessionsToKeep;\r\n\r\n  public constructor(storageService: ILocalStorageService) {\r\n    this._storageService = storageService;\r\n\r\n    this.weeklyMax = this._storageService.getNumber(WeeklyMaxStorageKey) || DefaultWeeklyMax;\r\n    this.sessionMax = this._storageService.getNumber(SessionMaxStorageKey) || DefaultSessionMax;\r\n    this.alcoholUnits = this._storageService.getNumber(AlcoholUnitsStorageKey) || DefaultAlcoholUnits;\r\n    this.hours = this._storageService.getNumber(HoursStorageKey) || DefaultHours;\r\n    this.historySessionsToKeep = this._storageService.getNumber(HistorySessionsToKeepStorageKey) || DefaultHistorySessionsToKeep;\r\n  }\r\n\r\n  public updateSettings(updates: IUpdateSettingsProps) {\r\n    this.weeklyMax = updates.weeklyMax;\r\n    this.sessionMax = updates.sessionMax;\r\n    this.hours = updates.hours;\r\n    this.alcoholUnits = updates.alcoholUnits;\r\n    this.historySessionsToKeep = updates.historySessionsToKeep;\r\n  }\r\n\r\n  public restoreDefaults() {\r\n    this.weeklyMax = DefaultWeeklyMax;\r\n    this.sessionMax = DefaultSessionMax;\r\n    this.alcoholUnits = DefaultAlcoholUnits;\r\n    this.hours = DefaultHours;\r\n    this.historySessionsToKeep = DefaultHistorySessionsToKeep;\r\n  }\r\n\r\n  public get weeklyMax(): number {\r\n    return this._weeklyMax;\r\n  }\r\n\r\n  public set weeklyMax(value: number) {\r\n    if (value === this._weeklyMax) return;\r\n    this._weeklyMax = value;\r\n    this._storageService.put(WeeklyMaxStorageKey, value);\r\n  }\r\n\r\n  public get sessionMax(): number {\r\n    return this._sessionMax;\r\n  }\r\n\r\n  public set sessionMax(value: number) {\r\n    if (value === this._sessionMax) return;\r\n    this._sessionMax = value;\r\n    this._storageService.put(SessionMaxStorageKey, value);\r\n  }\r\n\r\n  public get hours(): number {\r\n    return this._hours;\r\n  }\r\n\r\n  public set hours(value: number) {\r\n    if (value === this._hours) return;\r\n    this._hours = value;\r\n    this._storageService.put(HoursStorageKey, value);\r\n  }\r\n\r\n  public get alcoholUnits(): number {\r\n    return this._alcoholUnits;\r\n  }\r\n\r\n  public set alcoholUnits(value: number) {\r\n    if (value === this._alcoholUnits) return;\r\n    this._alcoholUnits = value;\r\n    this._storageService.put(AlcoholUnitsStorageKey, value);\r\n  }\r\n\r\n  public get consumptionRate(): number {\r\n    return this.alcoholUnits / this.hours;\r\n  }\r\n\r\n  public set historySessionsToKeep(value: number) {\r\n    if (value === this._historySessionsToKeep) return;\r\n    this._historySessionsToKeep = value;\r\n    this._storageService.put(HistorySessionsToKeepStorageKey, value);\r\n  }\r\n\r\n  public get historySessionsToKeep(): number {\r\n    return this._historySessionsToKeep;\r\n  }\r\n}\r\n\r\nexport { SettingsService };","import { ActiveSession } from \"../model/active-session\";\r\nimport { Drink } from \"../model/drink\";\r\nimport { LocalStorageService } from \"./local-storage-service\";\r\nimport { VolumeUnit } from \"../model/unit\";\r\n\r\ninterface IDrinkSaveModel {\r\n  volume: number;\r\n  volumeUnit: VolumeUnit;\r\n  abv: number;\r\n  time: string;\r\n}\r\n\r\ninterface IActiveSessionSaveModel {\r\n  drinks: IDrinkSaveModel[];\r\n  sessionMax: number;\r\n  date: string;\r\n  targetHourlyRate: number;\r\n}\r\n\r\nexport interface ISessionService {\r\n  loadSession(): ActiveSession | null;\r\n  saveSession(session: ActiveSession): void;\r\n}\r\n\r\nconst ActiveSessionStorageKey = 'ActiveSession';\r\n\r\nexport class SessionService {\r\n  private _localStorageService: LocalStorageService;\r\n\r\n  public constructor(localStorageService: LocalStorageService) {\r\n    this._localStorageService = localStorageService;\r\n  }\r\n\r\n  public loadSession(): ActiveSession | null {\r\n    const savedModel = this._localStorageService.getObject<IActiveSessionSaveModel>(ActiveSessionStorageKey);\r\n    if (!savedModel) {\r\n      return null;\r\n    }\r\n    const activeSession = new ActiveSession(\r\n      savedModel.sessionMax,\r\n      savedModel.targetHourlyRate\r\n    );\r\n    activeSession.date = new Date(savedModel.date);\r\n    savedModel.drinks.forEach(drink => activeSession.addDrink(new Drink(drink.volume, drink.volumeUnit, drink.abv, new Date(drink.time))));\r\n    return activeSession;\r\n  }\r\n\r\n  public saveSession(session: ActiveSession): void {\r\n    const drinks: IDrinkSaveModel[] = session.drinks.map(drink => ({\r\n      volume: drink.volume,\r\n      volumeUnit: drink.volumeUnit,\r\n      abv: drink.abv,\r\n      time: drink.time.toString()\r\n    }));\r\n    const saveModel: IActiveSessionSaveModel = {\r\n      drinks,\r\n      sessionMax: session.sessionMax,\r\n      date: session.date.toString(),\r\n      targetHourlyRate: session.targetHourlyRate\r\n    };\r\n    this._localStorageService.putObject<IActiveSessionSaveModel>(ActiveSessionStorageKey, saveModel);\r\n  }\r\n\r\n  public deleteSession(): void {\r\n    this._localStorageService.remove(ActiveSessionStorageKey);\r\n  }\r\n}","import { LocalStorageService } from \"./local-storage-service\";\r\nimport { History } from \"../model/history\";\r\nimport { HistoricalSession } from \"../model/historical-session\";\r\n\r\ninterface IHistoricSessionSaveModel {\r\n  unitsConsumed: number;\r\n  sessionMax: number;\r\n  weeklyMax: number;\r\n  rollingWeekly: number;\r\n  date: string;\r\n}\r\n\r\ninterface IHistorySaveModel {\r\n  historicSessions: IHistoricSessionSaveModel[];\r\n}\r\n\r\nconst HistoryStorageKey = 'History';\r\n\r\nexport class HistoryService {\r\n  private _localStorageService: LocalStorageService;\r\n  private _sessionsToKeep: number;\r\n\r\n  public constructor(localStorageService: LocalStorageService, sessionsToKeep: number) {\r\n    this._localStorageService = localStorageService;\r\n    this._sessionsToKeep = sessionsToKeep;\r\n  }\r\n\r\n  public loadHistory(): History | null {\r\n    const savedModel = this._localStorageService.getObject<IHistorySaveModel>(HistoryStorageKey);\r\n    if (!savedModel) {\r\n      return null;\r\n    }\r\n    const sessions = savedModel.historicSessions.map(session => \r\n      new HistoricalSession(\r\n        session.unitsConsumed, \r\n        new Date(session.date),\r\n        session.sessionMax,\r\n        session.weeklyMax,\r\n        session.rollingWeekly));\r\n    const history =  new History(sessions);\r\n    return history;\r\n  }\r\n\r\n  public set sessionsToKeep(value: number) {\r\n    this._sessionsToKeep = value;\r\n  }\r\n\r\n  public get sessionsToKeep(): number {\r\n    return this._sessionsToKeep;\r\n  }\r\n\r\n  public saveHistory(history: History): void {\r\n    const start = history.sessions.length > this._sessionsToKeep \r\n      ? history.sessions.length - this._sessionsToKeep : 0;\r\n    const sessions = history.sessions.slice(start, history.sessions.length);\r\n    const saveModel: IHistorySaveModel = {\r\n      historicSessions: sessions.map(session => ({\r\n        unitsConsumed: session.unitsConsumed,\r\n        sessionMax: session.sessionMax,\r\n        weeklyMax: session.weeklyMax,\r\n        rollingWeekly: session.rollingWeekly,\r\n        date: session.date.toString()\r\n      }))\r\n    };\r\n    this._localStorageService.putObject<IHistorySaveModel>(HistoryStorageKey, saveModel);\r\n  }\r\n\r\n  public deleteHistory(): void {\r\n    this._localStorageService.remove(HistoryStorageKey);\r\n  }\r\n}\r\n","import LZString from 'lz-string';\r\n\r\nexport interface ILocalStorageService {\r\n  put(key: string, value: number | string | boolean): void;\r\n  getString(key: string): string | null;\r\n  getNumber(key: string): number | null;\r\n  getBoolean(key: string): boolean | null;\r\n  getObject<T>(key: string): T | null;\r\n  putObject<T>(key: string, value: T): void;\r\n  remove(key: string): void;\r\n}\r\n\r\nexport class LocalStorageService implements ILocalStorageService {\r\n  private _namespace: string;\r\n\r\n  public constructor(namespace: string) {\r\n    this._namespace = namespace;\r\n  }\r\n\r\n  private _key(key: string): string {\r\n    return `${this._namespace}.${key}`;\r\n  }\r\n\r\n  private _zip(val: string): string {\r\n    return LZString.compressToUTF16(val);\r\n  }\r\n\r\n  private _unzip(val: string | null): string | null {\r\n    return val !== null ? LZString.decompressFromUTF16(val) : null;\r\n  }\r\n\r\n  public getString(key: string): string | null {\r\n    return this._unzip( localStorage.getItem(this._key(key)) );\r\n  }\r\n\r\n  public getNumber(key: string): number | null {\r\n    const value = this._unzip( localStorage.getItem(this._key(key)) );\r\n    return value ? parseFloat(value) : null;\r\n  }\r\n\r\n  public getBoolean(key: string): boolean | null {\r\n    const value = this._unzip( localStorage.getItem(this._key(key)) );\r\n    if (!value) return null;\r\n    return value.toLocaleLowerCase() === \"true\" ? true : false;\r\n  }\r\n\r\n  public put(key: string, value: string | number | boolean): void {\r\n    localStorage.setItem(this._key(key), this._zip( value.toString() ));\r\n  }\r\n\r\n  public getObject<T>(key: string): T | null {\r\n    const valueString = this._unzip( localStorage.getItem(this._key(key)) );\r\n    let value: T | null = null;\r\n    if (valueString) {\r\n      value = JSON.parse(valueString);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  public putObject<T>(key: string, value: T): void {\r\n    localStorage.setItem(this._key(key), this._zip( JSON.stringify(value) ));\r\n  }\r\n\r\n  public remove(key: string): void {\r\n    localStorage.removeItem(this._key(key));\r\n  }\r\n}\r\n","import { LocalStorageService } from \"./local-storage-service\";\r\n\r\nexport interface IMainStateService {\r\n    viewedHowToTab: boolean;\r\n    acceptedDisclaimer: boolean;\r\n}\r\n\r\nconst ViewedHowToTabStorageKey = 'ViewedHowToTab';\r\nconst AcceptedDisclaimerStorageKey = 'AcceptedDisclaimer';\r\n\r\nexport class MainStateService implements IMainStateService {\r\n  private _localStorageService: LocalStorageService;\r\n\r\n  public constructor(localStorageService: LocalStorageService) {\r\n    this._localStorageService = localStorageService;\r\n  }\r\n\r\n  public get viewedHowToTab(): boolean {\r\n    var result = this._localStorageService.getBoolean(ViewedHowToTabStorageKey);\r\n    return result || false;\r\n  }\r\n\r\n  public set viewedHowToTab(value: boolean) {\r\n    this._localStorageService.put(ViewedHowToTabStorageKey, value);\r\n  }\r\n\r\n  public get acceptedDisclaimer(): boolean {\r\n    var result = this._localStorageService.getBoolean(AcceptedDisclaimerStorageKey);\r\n    return result || false;\r\n  }\r\n\r\n  public set acceptedDisclaimer(value: boolean) {\r\n    this._localStorageService.put(AcceptedDisclaimerStorageKey, value);\r\n  }\r\n}","import { SettingsService } from './settings-service';\r\nimport { SessionService } from './session-service';\r\nimport { HistoryService } from './history-service';\r\nimport { LocalStorageService } from './local-storage-service';\r\nimport { MainStateService } from './main-state-service';\r\nimport { InstallService } from './install-service';\r\n\r\nexport class Initializer {\r\n  private _settingsService: SettingsService;\r\n  private _sessionService: SessionService;\r\n  private _historyService: HistoryService;\r\n  private _mainStateService: MainStateService;\r\n  private _installService: InstallService;\r\n\r\n  public constructor() {\r\n    const localStorageService = new LocalStorageService('SL.Less-Tipsy');\r\n    this._sessionService = new SessionService(localStorageService);\r\n    this._settingsService = new SettingsService(localStorageService);\r\n    this._historyService = new HistoryService(localStorageService, this._settingsService.historySessionsToKeep);\r\n    this._mainStateService = new MainStateService(localStorageService);\r\n    this._installService = new InstallService();\r\n  }\r\n\r\n  public get sessionService() {\r\n    return this._sessionService;\r\n  }\r\n\r\n  public get settingsService() {\r\n    return this._settingsService;\r\n  }\r\n\r\n  public get historyService() {\r\n    return this._historyService;\r\n  }\r\n\r\n  public get mainStateService() {\r\n    return this._mainStateService;\r\n  }\r\n  \r\n  public get installService() {\r\n    return this._installService;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { MainPanel } from './components/main-panel/main-panel';\r\nimport './App.scss';\r\nimport { Initializer } from './services/initializer';\r\nimport { version } from '../package.json';\r\n\r\nfunction App() {\r\n  const initializer = new Initializer();\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Less Tipsy</h1>\r\n      <MainPanel \r\n        settingsService={initializer.settingsService}\r\n        sessionService={initializer.sessionService}\r\n        historyService={initializer.historyService}\r\n        mainStateService={initializer.mainStateService}\r\n        installService={initializer.installService}\r\n        version={version}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}